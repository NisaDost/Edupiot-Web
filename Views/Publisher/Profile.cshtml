@model PublisherViewModel
@{
    ViewData["Title"] = "Profil";
}

<div class="d-flex flex-column flex-md-row">
    <partial name="_PublisherSidebar" />
    <div class="content">

        <!-- Profil Kartı -->
        <div class="bg-card p-4 mb-4">
            <div class="d-flex flex-column flex-md-row justify-content-between align-items-start">
                <!-- Bilgiler -->
                <div class="w-100 w-md-75">
                    <div class="d-flex align-items-center mb-4">
                        <h1 class="fw-bold mb-0" id="publisher-name">@Model.Name</h1>
                        <button class="btn btn-link p-0 ms-2" data-bs-toggle="modal" data-bs-target="#editProfileModal">
                            <i class="material-icons text-secondary">edit_square</i>
                        </button>
                    </div>

                    <div class="row g-3">
                        <div class="col-12 col-md-6">
                            <label class="form-label fs-5">E-Posta</label>
                            <p class="form-control-plaintext">@Model.Email</p>
                        </div>
                        <div class="col-12 col-md-6">
                            <label class="form-label fs-5">Web Sitesi</label>
                            <a class="form-control-plaintext" href="@(string.IsNullOrEmpty(Model.Website) ? "#" : Model.Website)">
                                @(string.IsNullOrEmpty(Model.Website) ? "Web sitesi bilgisi ekleyin" : Model.Website)
</a>
                        </div>
                        <div class="col-12">
                            <label class="form-label fs-5">Adres</label>
                            <p class="form-control-plaintext">@(string.IsNullOrEmpty(Model.Address) ? "Adres bilgisi ekleyin" : Model.Address)</p>
                        </div>
                    </div>
                </div>

                <!-- Logo -->
                <div class="text-center mt-4 mt-md-0 w-100 w-md-25">

                    @if (string.IsNullOrEmpty(Model.Logo))
                    {
                        <img src="~/Images/favicon.png" alt="Default Logo" class="img-fluid mb-2 rounded-circle" style="max-width: 10rem; border: 3px solid var(--secondary-color)">
                    }
                    else
                    {
                        <img src="@Model.Logo" alt="Publisher Logo" class="img-fluid mb-2 rounded-circle" style="max-width: 10rem; border: 3px solid var(--secondary-color)">
                    }
                </div>
            </div>
        </div>

        <!-- İstatistikler -->
        <div class="bg-card p-4">
            <h1 class="fw-bold text-center mb-5">İstatistikler</h1>
            <div class="row justify-content-center g-4">
                <div class="col-12 col-sm-8 col-md-6">
                    <div class="card-primary p-4 text-center">
                        <h4>Eklenen Soru Sayısı</h4>
                        <h1 class="text-light mt-2">@Model.QuestionCount</h1>
                    </div>
                </div>
                <div class="col-12 col-sm-8 col-md-6">
                    <div class="card-primary p-4 text-center">
                        <h4>Eklenen Quiz Sayısı</h4>
                        <h1 class="text-light mt-2">@Model.QuizCount</h1>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Düzenleme Modal -->
<div class="modal fade" id="editProfileModal" tabindex="-1" aria-labelledby="editProfileLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="editProfileForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="editProfileLabel">Profili Düzenle</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="Id" value="@Model.Id" />
                    <div class="mb-3">
                        <label class="form-label">Ad</label>
                        <input type="text" name="Name" class="form-control" value="@Model.Name" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">E-Posta</label>
                        <input type="email" name="Email" class="form-control" value="@Model.Email" readonly />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Web Sitesi</label>
                        <input type="text" name="Website" class="form-control" value="@Model.Website" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Adres</label>
                        <input type="text" name="Address" class="form-control" value="@Model.Address" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Logo Yükle</label>
                        <input type="file" name="LogoFile" class="form-control" accept="image/*" />
                        <small class="form-text text-muted">Mevcut logo: @(string.IsNullOrEmpty(Model.Logo) ? "Yok" : "Var")</small>
                    </div>
                    <!-- Hidden field for current logo path -->
                    <input type="hidden" name="Logo" value="@Model.Logo" />

                    <!-- Parola Güncelleme -->
                    <hr />
                    <div class="mb-3">
                        <label class="form-label">Mevcut Parola</label>
                        <input type="password" name="CurrentPassword" class="form-control" id="CurrentPassword" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Yeni Parola</label>
                        <input type="password" name="NewPassword" class="form-control" id="NewPassword" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Yeni Parola (Tekrar)</label>
                        <input type="password" name="ConfirmNewPassword" class="form-control" id="ConfirmNewPassword" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Kaydet</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
        <script>
            $("#editProfileForm").on("submit", function (e) {
                e.preventDefault();
                const formData = new FormData(this);

                const currentPassword = formData.get("CurrentPassword")?.trim();
                const newPassword = formData.get("NewPassword")?.trim(); // Back to NewPassword
                const confirmPassword = formData.get("ConfirmNewPassword")?.trim();
                const fileInput = document.querySelector('input[name="LogoFile"]'); // Updated field name
                const hasFile = fileInput.files.length > 0;

                const isPasswordChanged = newPassword || confirmPassword;

                // Validation
                if ((formData.get("Name") || formData.get("Website") || formData.get("Address") || hasFile) && !currentPassword) {
                    alert("Profil bilgilerini güncellemek için mevcut parolanızı girmelisiniz.");
                    return;
                }

                if (isPasswordChanged) {
                    if (!currentPassword) {
                        alert("Parola değiştirmek için mevcut parolanızı girmelisiniz.");
                        return;
                    }
                    if (!newPassword || !confirmPassword) {
                        alert("Yeni parolayı ve tekrarını eksiksiz girin.");
                        return;
                    }
                    if (newPassword.length < 8) {
                        alert("Yeni parola en az 8 karakter olmalı.");
                        return;
                    }
                    if (newPassword !== confirmPassword) {
                        alert("Yeni parolalar uyuşmuyor.");
                        return;
                    }
                }

                // Remove confirm password from form data as API doesn't expect it
                formData.delete("ConfirmNewPassword");

                // Log form data for debugging
                console.log("Form data being sent:");
                for (let [key, value] of formData.entries()) {
                    if (key === "LogoFile") {
                        console.log(key + ": " + (value.name || "No file"));
                    } else {
                        console.log(key + ": " + value);
                    }
                }

                // Get the publisher ID for the URL
                const publisherId = formData.get("Id");

                // Remove ID from form data since it goes in the URL
                formData.delete("Id");

                $.ajax({
                    url: "/Publisher/UpdateProfile", // Back to original URL since you're not using path parameter
                    type: "PUT",
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        alert("Profil başarıyla güncellendi.");
                        $("#editProfileModal").modal('hide');
                        location.reload();
                    },
                    error: function (xhr) {
                        console.error("Error details:", xhr);
                        let errorMessage = "Güncelleme başarısız.";

                        if (xhr.responseText) {
                            try {
                                const errorData = JSON.parse(xhr.responseText);
                                errorMessage += " Detay: " + (errorData.message || xhr.responseText);
                            } catch (e) {
                                errorMessage += " Detay: " + xhr.responseText;
                            }
                        }

                        alert(errorMessage);
                    }
                });
            });
        </script>
}