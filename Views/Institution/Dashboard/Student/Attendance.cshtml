@{
    ViewData["Title"] = "Yoklama";
}

<div class="d-flex flex-row">
    <partial name="_InstitutionSidebar" />

    <div class="content">
        <div class="bg-card">
            <p>
                Yoklama al ve yoklama listesi olarak 2 adet işlev olacak. <br />
                Bu sayfaya FEA için yaptığımız yüz algılama/yoklama alma uygulaması eklenecek.<br />
                Öğrencilerin fotoğrafı (nullable) sisteme eklenecek ve uygulama fotoğrafları veritabanından çekip eşleştirme yapacak <br />
                Yoklama alındıktan sonra yoklama bilgileri veritabanına kaydedilecek ve yoklama bilgileri listelenecek.
            </p>

            <div>
                <h1>Yoklama Al</h1>
                <div class="d-flex justify-content-around">
                    <div>
                        <video id="video" width="640" height="480" autoplay></video>
                        <button id="capture" class="btn-info rounded mx-4 mt-2">Fotoğraf Çek</button>
                        <canvas id="canvas" width="640" height="480" style="display: none;"></canvas>
                    </div>
                    <div class="mx-4">
                        <img id="photo" style="display: none;">
                        <button id="upload" style="display: none;" class="btn-success rounded mx-4 mt-3">Fotoğrafı Kaydet</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

@section Scripts{
    <script>
        const video = document.getElementById('video');
        const canvas = document.getElementById('canvas');
        const photo = document.getElementById('photo');
        const captureButton = document.getElementById('capture');
        const uploadButton = document.getElementById('upload');

        // Open camera
        navigator.mediaDevices.getUserMedia({ video: true })
            .then(stream => {
                video.srcObject = stream;
            })
            .catch(err => {
                console.error("Kamera erişimi hatası: ", err);
            });

        // Capture photo
        captureButton.addEventListener('click', () => {
            const context = canvas.getContext('2d');
            context.drawImage(video, 0, 0, 640, 480);
            const imageData = canvas.toDataURL('image/png');
            photo.src = imageData;
            photo.style.display = 'block';
            uploadButton.style.display = 'block';
        });

        // Upload photo
        uploadButton.addEventListener('click', async () => {
            const firstName = prompt("Fotoğraftaki kişinin adı:");
            const lastName = prompt("Fotoğraftaki kişinin soyadı:");

            if (!firstName || !lastName) {
                alert("Ad ve soyad bilgisi zorunludur!");
                return;
            }

            const filename = `${firstName}_${lastName}.png`;
            const imageData = photo.src.replace(/^data:image\/(png|jpg);base64,/, '');

            const response = await fetch('/PythonApp/SaveCapturedPhoto', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ image: imageData, filename })
            });

            const result = await response.json();
            alert(result.message);
        });
    </script>
}
