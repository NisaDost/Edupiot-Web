@model List<EduPilot.Web.DTOs.StudentDTO>

@{
    ViewData["Title"] = "Öğrenci Listesi";
    var index = 1;
    var grades = Model.Select(s => s.Grade).Distinct().OrderBy(g => g).ToList();
}

<div class="d-flex flex-row">
    <partial name="_InstitutionSidebar" />
    <div class="content">
        <div class="bg-card">

            <h1 class="fw-bold">Sisteme Kayıtlı Öğrenci Listesi</h1>

            <!-- Filtreleme ve Ekleme Satırı -->
            <div class="d-flex flex-row align-items-center justify-content-between mb-3">
                <div class="d-flex align-items-center">
                    <label for="gradeFilter" class="form-label me-2">Sınıf:</label>
                    <select id="gradeFilter" class="form-select" style="width: 7rem">
                        <option value="">Tümü</option>
                        @foreach (var grade in grades)
                        {
                            <option value="@grade">@grade</option>
                        }
                    </select>
                </div>
                <div class="d-flex flex-row align-items-center justify-content-end">
                    <label for="studentmail" class="fs-5 pe-3 mb-0">Öğrenci E-Posta:</label>
                    <input type="email" id="studentmail" name="studentmail" placeholder="ogrenci@mail.com" class="form-control me-2" style="width: 15rem" />
                    <button class="btn btn-secondary" style="width: 7rem">Ekle</button>
                </div>
            </div>

            <!-- Tablo -->
            <div class="table-responsive">
                <table class="table table-bordered table-striped" id="studentTable">
                    <thead class="text-light" style="background-color: var(--primary-accent)">
                        <tr>
                            <th>#</th>
                            <th>Ad</th>
                            <th>İkinci Ad</th>
                            <th>Soyad</th>
                            <th>Sınıf</th>
                            <th>Danışman</th>
                            <th>Fotoğraf</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            foreach (var student in Model)
                            {
                                <tr data-grade="@student.Grade">
                                    <td>@index</td>
                                    <td>@student.FirstName</td>
                                    <td>@(string.IsNullOrEmpty(student.MiddleName) ? "-" : student.MiddleName)</td>
                                    <td>@student.LastName</td>
                                    <td>@student.Grade</td>
                                    <td>
                                        @if (student.SupervisorName != null && student.SupervisorName.Any())
                                        {
                                            @string.Join(", ", student.SupervisorName)
                                        }
                                        else
                                        {
                                            <span>Kayıtlı danışman bulunmamaktadır.</span>
                                        }
                                    </td>
                                    <td class="text-center">
                                        @if (student.MugShot != null && student.MugShot.Any())
                                        {
                                            <span>
                                                @* Put student image in a small circle *@
                                                @student.MugShot

                                            </span>
                                            <a class="material-symbols-outlined text-decoration-none text-dark"
                                               href="@Url.Action("TakePhoto", "Institution", new { sId = student.StudentId, sName = student.FirstName + "_" + student.LastName })">
                                                reset_image
                                            </a>
                                        }
                                        else
                                        {
                                            <a class="material-symbols-outlined text-decoration-none text-dark"
                                               href="@Url.Action("TakePhoto", "Institution", new { sId = student.StudentId, sName = student.FirstName + "_" + student.LastName })"
                                               title="Fotoğraf Çek">
                                                add_a_photo
                                            </a>
                                        }
                                    </td>
                                </tr>
                                index++;
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="7" class="text-center">Kayıtlı öğrenci bulunmamaktadır.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Ekleme
        document.querySelector('button.btn.btn-secondary').addEventListener('click', function () {
            const emailInput = document.getElementById('studentmail');
            const email = emailInput.value.trim();

            if (!email) {
                alert("Lütfen geçerli bir e-posta girin.");
                return;
            }

            fetch("/Institution/AddStudent", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                },
                body: JSON.stringify(email)
            })
            .then(response => {
                if (!response.ok) throw new Error("Ekleme başarısız");
                alert("Öğrenci başarıyla eklendi.");
                location.reload();
            })
            .catch(err => {
                console.error(err);
                alert("Öğrenci eklenemedi.");
            });
        });

        // Sınıfa göre filtreleme
        document.getElementById("gradeFilter").addEventListener("change", function () {
            const selectedGrade = this.value;
            const rows = document.querySelectorAll("#studentTable tbody tr");

            rows.forEach(row => {
                const grade = row.getAttribute("data-grade");
                if (!selectedGrade || grade === selectedGrade) {
                    row.style.display = "";
                } else {
                    row.style.display = "none";
                }
            });
        });
    </script>
}
